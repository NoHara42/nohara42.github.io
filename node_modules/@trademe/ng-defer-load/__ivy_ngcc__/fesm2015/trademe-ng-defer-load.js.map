{"version":3,"file":"trademe-ng-defer-load.js","sources":["@trademe/ng-defer-load/defer-load.directive.ts","@trademe/ng-defer-load/defer-load.module.ts","@trademe/ng-defer-load/trademe-ng-defer-load.ts"],"names":["tslib_1.__decorate","tslib_1.__param"],"mappings":";;;;;;;IAQa,kBAAkB,GAA/B,MAAa,kBAAkB;AAAG,IAU9B,YACY,QAAoB,EACpB,KAAa,EACQ,UAAkB;AACpD,QAHa,aAAQ,GAAR,QAAQ,CAAY;AAAC,QACrB,UAAK,GAAL,KAAK,CAAQ;AAAC,QACO,eAAU,GAAV,UAAU,CAAQ;AACvD,QAZoB,cAAS,GAAY,IAAI,CAAC;AAC9C,QAAoB,oBAAe,GAAY,IAAI,CAAC;AACpD,QAAoB,6BAAwB,GAAY,IAAI,CAAC;AAC7D,QAAqB,cAAS,GAAsB,IAAI,YAAY,EAAE,CAAC;AACvE,QAsDY,yBAAoB,GAAG,CAAC,OAAyC;AAC7E,YAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,KAAgC;AACzD,gBAAY,IAAI,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,EAAE;AACjD,oBAAgB,IAAI,CAAC,IAAI,EAAE,CAAC;AAC5B,oBAAgB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;AAC/E,wBAAoB,IAAI,CAAC,qBAAqB,CAAC,SAAS,EAAW,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;AACjG,qBAAiB;AACjB,iBAAa;AACb,aAAS,CAAC,CAAC;AACX,SAAK,CAAA;AACL,QAuCY,aAAQ,GAAG;AACvB,YAAQ,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;AAC9B,gBAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;AAC9C,aAAS;AACT,SAAK,CAAA;AACL,KApGS;AACT,IACW,QAAQ;AAAK,QAChB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,SAAS,KAAK,IAAI;AACzE,aAAa,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,KAAK,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,CAAC,EAAE;AACpH,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC;AACxB,SAAS;AACT,KAAK;AACL,IACW,eAAe;AAAK,QACvB,IAAI,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAChD,YAAY,IAAI,IAAI,CAAC,oBAAoB,EAAE,EAAE;AAC7C,gBAAgB,IAAI,CAAC,4BAA4B,EAAE,CAAC;AACpD,gBAAgB,IAAI,IAAI,CAAC,qBAAqB,IAAI,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE;AAC/E,oBAAoB,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAW,IAAI,CAAC,QAAQ,CAAC,aAAa,EAAE,CAAC;AAC/F,iBAAiB;AACjB,aAAa;AAAC,iBAAK,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;AACtD,gBAAgB,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1C,aAAa;AACb,SAAS;AACT,KAAK;AACL,IACW,oBAAoB;AAAK,QAC5B,MAAM,uBAAuB,GAAG,sBAAsB,IAAI,MAAM,CAAC;AACzE,QAAQ,MAAM,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;AACrD,QAAQ,MAAM,OAAO,GAAG,SAAS,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;AAC1D,QACQ,MAAM,MAAM,GAAG,CAAC,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AACvD,QAAQ,MAAM,uBAAuB,GAAG,MAAM,KAAK,CAAC,CAAC,OAAO,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;AAC/F,QACQ,OAAO,uBAAuB,KAAK,CAAC,MAAM,IAAI,uBAAuB,CAAC,CAAC;AAC/E,KAAK;AACL,IACW,WAAW;AAAK,QACnB,IAAI,CAAC,eAAe,EAAE,CAAC;AAC/B,KAAK;AACL,IACY,4BAA4B;AAAK,QACrC,IAAI,CAAC,CAAC,IAAI,CAAC,qBAAqB,EAAE;AAC1C,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,qBAAqB,GAAG,IAAI,oBAAoB,CAAC,OAAO;AACrE,YAAY,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;AAC/C,SAAS,EAAE,EAAE,CAAC,CAAC;AACf,KAAK;AACL,IAYY,mBAAmB,CAAE,KAAgC;AACjE;AACA;AACA,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;AACjC,YAAY,OAAa,KAAM,CAAC,cAAc,IAAI,KAAK,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC;AAC/F,SAAS;AACT,QAAQ,OAAO,IAAI,CAAC,SAAS,EAAE,CAAC;AAChC,KAAK;AACL,IACY,IAAI;AAAK,QACb,IAAI,IAAI,CAAC,wBAAwB,EAAE;AAC3C,YAAY,IAAI,CAAC,eAAe,EAAE,CAAC;AACnC,SAAS;AACT,QAAQ,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;AAC9B,KAAK;AACL,IACY,kBAAkB;AAAK,QAC3B,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE;AAC9B,YAAY,IAAI,CAAC,IAAI,EAAE,CAAC;AACxB,YAAY,OAAO;AACnB,SAAS;AACT,QAAQ,IAAI,CAAC,KAAK,CAAC,iBAAiB,CAAC;AACrC,YAAY,IAAI,CAAC,mBAAmB,GAAG,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC;AAClE,iBAAiB,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;AACvC,iBAAiB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,SAAS,CAAC,CAAC;AACX,KAAK;AACL,IACY,eAAe;AAAK,QACxB,IAAI,IAAI,CAAC,mBAAmB,EAAE;AACtC,YAAY,IAAI,CAAC,mBAAmB,CAAC,WAAW,EAAE,CAAC;AACnD,SAAS;AACT,QACQ,IAAI,IAAI,CAAC,qBAAqB,EAAE;AACxC,YAAY,IAAI,CAAC,qBAAqB,CAAC,UAAU,EAAE,CAAC;AACpD,SAAS;AACT,KAAK;AACL,IAOY,SAAS;AAAK,QAClB,IAAI,cAAc,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AACtD,QAAQ,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC,GAAG,IAAI,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,WAAW,CAAC,CAAC;AAC7H,QAAQ,OAAO,aAAa,IAAI,cAAc,CAAC;AAC/C,KAAK;AACL,IACY,iBAAiB;AAAK;AACuB,QACjD,OAAO,CAAC,MAAM,CAAC,OAAO,IAAI,MAAM,CAAC,WAAW;AACpD,eAAe,QAAQ,CAAC,eAAe,CAAC,YAAY,IAAI,QAAQ,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACpF,KAAK;AACL,CAAC;;wRAAA;AACD;AAA4C,YApHlB,UAAU;AAClC,YAAqB,MAAM;AAC3B,YAA+C,MAAM,uBAA9C,MAAM,SAAC,WAAW;AAAQ;AAXtBA;AAAaA,IAArB,KAAK,EAAE;AAAC,qDAAiC;AACjCA;AAAaA,IAArB,KAAK,EAAE;AAAC,2DAAuC;AACvCA;AAAaA,IAArB,KAAK,EAAE;AAAC,oEAAgD;AAC/CA;AAAaA,IAAtB,MAAM,EAAE;AAAC,qDAAyD;AAL1D,kBAAkB,oBAH9B,SAAS,CAAC,UACP,zBAEA,CAaKC,WAAA,MAAM,CAAC,WAAW,CAAC,CAAA;AAfhB,EAAE,aAAa,MAC1B,CAAC,tBAc2B,GAbhB,kBAAkB,CA8H9B;AACA;AAAC,IC/HW,eAAe,GAA5B,MAAa,eAAe;AAAG,CAAC,CAAA;AAAnB,eAAe,oBAL3B,QAAQ,CAAC,UACN,OAAO,EAAE,CAAC;CAAY,CAAC,UACvB,YAAY,EAAE,CAAC,kBAAkB,CAAC,UAClC,OAAO,EAAE,CAAC,kBAAkB,CAAC,MAChC,CAAC,IACW,eAAe,CAAI;;;;;;;;;;;;;;;;;;;;;;;;;;0BAChC;AAAC;ACTD;AACA;AACA,GAAG;AACH;AACA;AACkB","sourcesContent":["import { isPlatformBrowser, isPlatformServer } from '@angular/common';\r\nimport { AfterViewInit, Directive, ElementRef, EventEmitter, Inject, Input, NgZone, OnDestroy, OnInit, Output, PLATFORM_ID } from '@angular/core';\r\nimport { fromEvent, Subscription } from 'rxjs';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Directive({\r\n    selector: '[deferLoad]'\r\n})\r\nexport class DeferLoadDirective implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() public preRender: boolean = true;\r\n    @Input() public fallbackEnabled: boolean = true;\r\n    @Input() public removeListenersAfterLoad: boolean = true;\r\n    @Output() public deferLoad: EventEmitter<any> = new EventEmitter();\r\n\r\n    private _intersectionObserver?: IntersectionObserver;\r\n    private _scrollSubscription?: Subscription;\r\n\r\n    constructor (\r\n        private _element: ElementRef,\r\n        private _zone: NgZone,\r\n        @Inject(PLATFORM_ID) private platformId: Object\r\n    ) { }\r\n\r\n    public ngOnInit () {\r\n        if ((isPlatformServer(this.platformId) && this.preRender === true) ||\r\n            (isPlatformBrowser(this.platformId) && this.fallbackEnabled === false && !this.hasCompatibleBrowser())) {\r\n            this.load();\r\n        }\r\n    }\r\n\r\n    public ngAfterViewInit () {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (this.hasCompatibleBrowser()) {\r\n                this.registerIntersectionObserver();\r\n                if (this._intersectionObserver && this._element.nativeElement) {\r\n                    this._intersectionObserver.observe(<Element>(this._element.nativeElement));\r\n                }\r\n            } else if (this.fallbackEnabled === true) {\r\n                this.addScrollListeners();\r\n            }\r\n        }\r\n    }\r\n\r\n    public hasCompatibleBrowser (): boolean {\r\n        const hasIntersectionObserver = 'IntersectionObserver' in window;\r\n        const userAgent = window.navigator.userAgent;\r\n        const matches = userAgent.match(/Edge\\/(\\d*)\\./i);\r\n\r\n        const isEdge = !!matches && matches.length > 1;\r\n        const isEdgeVersion16OrBetter = isEdge && (!!matches && parseInt(matches[1], 10) > 15);\r\n\r\n        return hasIntersectionObserver && (!isEdge || isEdgeVersion16OrBetter);\r\n    }\r\n\r\n    public ngOnDestroy () {\r\n        this.removeListeners();\r\n    }\r\n\r\n    private registerIntersectionObserver (): void {\r\n        if (!!this._intersectionObserver) {\r\n            return;\r\n        }\r\n        this._intersectionObserver = new IntersectionObserver(entries => {\r\n            this.checkForIntersection(entries);\r\n        }, {});\r\n    }\r\n\r\n    private checkForIntersection = (entries: Array<IntersectionObserverEntry>) => {\r\n        entries.forEach((entry: IntersectionObserverEntry) => {\r\n            if (this.checkIfIntersecting(entry)) {\r\n                this.load();\r\n                if (this._intersectionObserver && this._element.nativeElement) {\r\n                    this._intersectionObserver.unobserve(<Element>(this._element.nativeElement));\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkIfIntersecting (entry: IntersectionObserverEntry) {\r\n        // For Samsung native browser, IO has been partially implemented where by the\r\n        // callback fires, but entry object is empty. We will check manually.\r\n        if (entry && entry.time) {\r\n            return (<any>entry).isIntersecting && entry.target === this._element.nativeElement;\r\n        }\r\n        return this.isVisible();\r\n    }\r\n\r\n    private load (): void {\r\n        if (this.removeListenersAfterLoad) {\r\n            this.removeListeners();\r\n        }\r\n        this.deferLoad.emit();\r\n    }\r\n\r\n    private addScrollListeners () {\r\n        if (this.isVisible()) {\r\n            this.load();\r\n            return;\r\n        }\r\n        this._zone.runOutsideAngular(() => {\r\n            this._scrollSubscription = fromEvent(window, 'scroll')\r\n                .pipe(debounceTime(50))\r\n                .subscribe(this.onScroll);\r\n        });\r\n    }\r\n\r\n    private removeListeners () {\r\n        if (this._scrollSubscription) {\r\n            this._scrollSubscription.unsubscribe();\r\n        }\r\n\r\n        if (this._intersectionObserver) {\r\n            this._intersectionObserver.disconnect();\r\n        }\r\n    }\r\n\r\n    private onScroll = () => {\r\n        if (this.isVisible()) {\r\n            this._zone.run(() => this.load());\r\n        }\r\n    }\r\n\r\n    private isVisible () {\r\n        let scrollPosition = this.getScrollPosition();\r\n        let elementOffset = this._element.nativeElement.getBoundingClientRect().top + (window.scrollY || window.pageYOffset);\r\n        return elementOffset <= scrollPosition;\r\n    }\r\n\r\n    private getScrollPosition () {\r\n        // Getting screen size and scroll position for IE\r\n        return (window.scrollY || window.pageYOffset)\r\n            + (document.documentElement.clientHeight || document.body.clientHeight);\r\n    }\r\n}\r\n","import {CommonModule} from '@angular/common';\r\nimport {NgModule} from '@angular/core';\r\nimport {DeferLoadDirective} from './defer-load.directive';\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [DeferLoadDirective],\r\n    exports: [DeferLoadDirective]\r\n})\r\nexport class DeferLoadModule { }\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"]}